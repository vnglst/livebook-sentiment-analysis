<!-- livebook:{"persist_outputs":true} -->

# Sentiment Analysis of Toots

```elixir
Mix.install(
  [
    {:httpoison, ">= 0.0.0"},
    {:jason, ">= 0.0.0"},
    {:kino_bumblebee, "~> 0.1.0"},
    {:exla, "~> 0.4.1"},
    {:kino_vega_lite, "~> 0.1.7"},
    {:kino, "~> 0.8.0"},
    {:floki, "~> 0.34.0"}
  ],
  config: [nx: [default_backend: EXLA.Backend]]
)

alias VegaLite, as: Vl
```

<!-- livebook:{"output":true} -->

```
Resolving Hex dependencies...
Dependency resolution completed:
New:
  axon 0.3.1
  bumblebee 0.1.0
  castore 0.1.20
  certifi 2.9.0
  complex 0.4.2
  decimal 2.0.0
  elixir_make 0.7.1
  exla 0.4.1
  floki 0.34.0
  hackney 1.18.1
  httpoison 1.8.2
  idna 6.1.1
  jason 1.4.0
  kino 0.8.0
  kino_bumblebee 0.1.0
  kino_vega_lite 0.1.7
  metrics 1.0.1
  mimerl 1.2.0
  nx 0.4.1
  nx_image 0.1.0
  parse_trans 3.3.1
  progress_bar 2.0.1
  rustler_precompiled 0.5.4
  ssl_verify_fun 1.1.6
  table 0.1.2
  telemetry 1.1.0
  tokenizers 0.2.0
  unicode_util_compat 0.7.0
  unpickler 0.1.0
  vega_lite 0.1.6
  xla 0.4.1
* Getting httpoison (Hex package)
* Getting jason (Hex package)
* Getting kino_bumblebee (Hex package)
* Getting exla (Hex package)
* Getting kino_vega_lite (Hex package)
* Getting kino (Hex package)
* Getting floki (Hex package)
* Getting table (Hex package)
* Getting vega_lite (Hex package)
* Getting elixir_make (Hex package)
* Getting nx (Hex package)
* Getting telemetry (Hex package)
* Getting xla (Hex package)
* Getting complex (Hex package)
* Getting bumblebee (Hex package)
* Getting axon (Hex package)
* Getting castore (Hex package)
* Getting nx_image (Hex package)
* Getting progress_bar (Hex package)
* Getting tokenizers (Hex package)
* Getting unpickler (Hex package)
* Getting rustler_precompiled (Hex package)
* Getting decimal (Hex package)
* Getting hackney (Hex package)
* Getting certifi (Hex package)
* Getting idna (Hex package)
* Getting metrics (Hex package)
* Getting mimerl (Hex package)
* Getting parse_trans (Hex package)
* Getting ssl_verify_fun (Hex package)
* Getting unicode_util_compat (Hex package)
You have added/upgraded packages you could sponsor, run `mix hex.sponsor` to learn more
==> floki
Compiling 1 file (.xrl)
Compiling 2 files (.erl)
Compiling 28 files (.ex)
Generated floki app
==> decimal
Compiling 4 files (.ex)
Generated decimal app
==> progress_bar
Compiling 10 files (.ex)
Generated progress_bar app
==> table
Compiling 5 files (.ex)
Generated table app
==> vega_lite
Compiling 5 files (.ex)
Generated vega_lite app
===> Analyzing applications...
===> Compiling unicode_util_compat
===> Analyzing applications...
===> Compiling idna
===> Analyzing applications...
===> Compiling telemetry
==> jason
Compiling 10 files (.ex)
Generated jason app
===> Analyzing applications...
===> Compiling mimerl
==> unpickler
Compiling 3 files (.ex)
Generated unpickler app
==> ssl_verify_fun
Compiling 7 files (.erl)
Generated ssl_verify_fun app
==> complex
Compiling 2 files (.ex)
Generated complex app
==> nx
Compiling 29 files (.ex)
Generated nx app
==> kino
Compiling 37 files (.ex)
Generated kino app
==> kino_vega_lite
Compiling 4 files (.ex)
Generated kino_vega_lite app
==> axon
Compiling 24 files (.ex)
Generated axon app
==> nx_image
Compiling 1 file (.ex)
Generated nx_image app
===> Analyzing applications...
===> Compiling certifi
===> Analyzing applications...
===> Compiling parse_trans
===> Analyzing applications...
===> Compiling metrics
===> Analyzing applications...
===> Compiling hackney
==> castore
Compiling 1 file (.ex)
Generated castore app
==> elixir_make
Compiling 6 files (.ex)
Generated elixir_make app
==> xla
Compiling 2 files (.ex)
Generated xla app
==> exla
Unpacking /Users/vnglst/Library/Caches/xla/0.4.1/cache/download/xla_extension-aarch64-darwin-cpu.tar.gz into /Users/vnglst/Library/Caches/mix/installs/elixir-1.14.2-erts-13.0.3/161d376be091031432b4cfffaf4f04b3/deps/exla/cache
c++ -fPIC -I/Applications/Livebook.app/Contents/Resources/rel/vendor/otp/erts-13.0.3/include -Icache/xla_extension/include -O3 -Wall -Wno-sign-compare -Wno-unused-parameter -Wno-missing-field-initializers -Wno-comment -shared -std=c++17 -w -DLLVM_ON_UNIX=1 c_src/exla/exla.cc c_src/exla/exla_nif_util.cc c_src/exla/exla_client.cc -o cache/libexla.so -Lcache/xla_extension/lib -lxla_extension -flat_namespace -undefined suppress
install_name_tool -change bazel-out/darwin_arm64-opt/bin/tensorflow/compiler/xla/extension/libxla_extension.so @loader_path/xla_extension/lib/libxla_extension.so -change bazel-out/darwin-opt/bin/tensorflow/compiler/xla/extension/libxla_extension.so @loader_path/xla_extension/lib/libxla_extension.so cache/libexla.so
Compiling 21 files (.ex)
Generated exla app
==> rustler_precompiled
Compiling 4 files (.ex)
Generated rustler_precompiled app
==> tokenizers
Compiling 7 files (.ex)

21:46:13.301 [debug] Copying NIF from cache and extracting to /Users/vnglst/Library/Caches/mix/installs/elixir-1.14.2-erts-13.0.3/161d376be091031432b4cfffaf4f04b3/_build/dev/lib/tokenizers/priv/native/libex_tokenizers-v0.2.0-nif-2.16-aarch64-apple-darwin.so
Generated tokenizers app
==> bumblebee
Compiling 64 files (.ex)
Generated bumblebee app
==> kino_bumblebee
Compiling 3 files (.ex)
Generated kino_bumblebee app
==> httpoison
Compiling 3 files (.ex)
Generated httpoison app
```

<!-- livebook:{"output":true} -->

```
VegaLite
```

## Fetching statuses

```elixir
user_id_input = Kino.Input.text("Mastodon user id?")

# Jose Valim is 109434491871265383
# Koen van Gilst (that's me): 109326385811340972
```

```elixir
user_id = Kino.Input.read(user_id_input)

%{body: body} = HTTPoison.get!("https://maakr.social/api/v1/accounts/#{user_id}/statuses")
```

<!-- livebook:{"output":true} -->

```
%HTTPoison.Response{
  status_code: 200,
  body: "[{\"id\":\"109485828589139596\",\"created_at\":\"2022-12-09T21:26:03.785Z\",\"in_reply_to_id\":\"109485787965399091\",\"in_reply_to_account_id\":\"109326385811340972\",\"sensitive\":false,\"spoiler_text\":\"\",\"visibility\":\"public\",\"language\":\"en\",\"uri\":\"https://maakr.social/users/koen/statuses/109485828589139596\",\"url\":\"https://maakr.social/@koen/109485828589139596\",\"replies_count\":0,\"reblogs_count\":0,\"favourites_count\":0,\"edited_at\":null,\"content\":\"\\u003cp\\u003eBy the way: the fact that Mastodon is an open platform makes this even easier. Status updates are just an API call away, no authentication required!\\u003c/p\\u003e\",\"reblog\":null,\"application\":{\"name\":\"Web\",\"website\":null},\"account\":{\"id\":\"109326385811340972\",\"username\":\"koen\",\"acct\":\"koen\",\"display_name\":\"Koen van Gilst\",\"locked\":false,\"bot\":false,\"discoverable\":false,\"group\":false,\"created_at\":\"2022-11-11T00:00:00.000Z\",\"note\":\"\\u003cp\\u003eFrontend lead @Rabobank ✦ TypeScript, React, Svelte \\u0026amp; Phoenix ✦ father of two ✦ philosopher by training\\u003c/p\\u003e\",\"url\":\"https://maakr.social/@koen\",\"avatar\":\"https://s3-eu-central-1.amazonaws.com/maakr-social/accounts/avatars/109/326/385/811/340/972/original/81c5b53cbe7dabcf.jpeg\",\"avatar_static\":\"https://s3-eu-central-1.amazonaws.com/maakr-social/accounts/avatars/109/326/385/811/340/972/original/81c5b53cbe7dabcf.jpeg\",\"header\":\"https://s3-eu-central-1.amazonaws.com/maakr-social/accounts/headers/109/326/385/811/340/972/original/14d9f2e433318cbc.jpg\",\"header_static\":\"https://s3-eu-central-1.amazonaws.com/maakr-social/accounts/headers/109/326/385/811/340/972/original/14d9f2e433318cbc.jpg\",\"followers_count\":140,\"following_count\":441,\"statuses_count\":29,\"last_status_at\":\"2022-12-09\",\"noindex\":false,\"emojis\":[],\"fields\":[{\"name\":\"Website\",\"value\":\"\\u003ca href=\\\"https://koenvangilst.nl/\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer me\\\"\\u003e\\u003cspan class=\\\"invisible\\\"\\u003ehttps://\\u003c/span\\u003e\\u003cspan class=\\\"\\\"\\u003ekoenvangilst.nl/\\u003c/span\\u003e\\u003cspan class=\\\"invisible\\\"\\u003e\\u003c/span\\u003e\\u003c/a\\u003e\",\"verified_at\":\"2022-11-13T13:48:13.661+00:00\"},{\"name\":\"Github\",\"value\":\"\\u003ca href=\\\"https://github.com/vnglst\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer me\\\"\\u003e\\u003cspan class=\\\"invisible\\\"\\u003ehttps://\\u003c/span\\u003e\\u003cspan class=\\\"\\\"\\u003egithub.com/vnglst\\u003c/span\\u003e\\u003cspan class=\\\"invisible\\\"\\u003e\\u003c/span\\u003e\\u003c/a\\u003e\",\"verified_at\":null}]},\"media_attachments\":[],\"mentions\":[],\"tags\":[],\"emojis\":[],\"card\":null,\"poll\":null},{\"id\":\"109485787965399091\",\"created_at\":\"2022-12-09T21:15:43.918Z\",\"in_reply_to_id\":null,\"in_reply_to_account_id\":null,\"sensitive\":false,\"spoiler_text\":\"\",\"visibility\":\"public\",\"language\":\"en\",\"uri\":\"https://maakr.social/users/koen/statuses/109485787965399091\",\"url\":\"https://maakr.social/@koen/109485787965399091\",\"replies_count\":1,\"reblogs_count\":0,\"favourites_count\":0,\"edited_at\":null,\"content\":\"\\u003cp\\u003eAfter \\u003cspan class=\\\"h-card\\\"\\u003e\\u003ca href=\\\"https://genserver.social/users/josevalim\\\" class=\\\"u-url mention\\\"\\u003e@\\u003cspan\\u003ejosevalim\\u003c/span\\u003e\\u003c/a\\u003e\\u003c/span\\u003e\\u0026#39;s impressive demo of Elixir Bumblebee I gave the neural networks a try in Livebook. It\\u0026#39;s pretty amazing how easy it is to get started.\\u003c/p\\u003e\\u003cp\\u003eThis is a sentiment analysis of José Valim\\u0026#39;s most recent status updates. Yes, he\\u0026#39;s a pretty positive guy!\\u003c/p\\u003e\\u003cp\\u003eFor anyone interested, here\\u0026#39;s the Livebook: \\u003ca href=\\\"https://github.com/vnglst/livebook-sentiment-analysis\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\"\\u003e\\u003cspan class=\\\"invisible\\\"\\u003ehttps://\\u003c/span\\u003e\\u003cspan class=\\\"ellipsis\\\"\\u003egithub.com/vnglst/livebook-sen\\u003c/span\\u003e\\u003cspan class=\\\"invisible\\\"\\u003etiment-analysis\\u003c/span\\u003e\\u003c/a\\u003e\\u003c/p\\u003e\",\"reblog\":null,\"application\":{\"name\":\"Web\",\"website\":null},\"account\":{\"id\":\"109326385811340972\",\"username\":\"koen\",\"acct\":\"koen\",\"display_name\":\"Koen van Gilst\",\"locked\":false,\"bot\":false,\"discover" <> ...,
  headers: [
    {"Date", "Fri, 09 Dec 2022 21:58:31 GMT"},
    {"Content-Type", "application/json; charset=utf-8"},
    {"Transfer-Encoding", "chunked"},
    {"Connection", "keep-alive"},
    {"Vary", "Accept-Encoding"},
    {"Server", "Mastodon"},
    {"X-Frame-Options", "DENY"},
    {"X-Content-Type-Options", "nosniff"},
    {"X-XSS-Protection", "0"},
    {"Permissions-Policy", "interest-cohort=()"},
    {"X-RateLimit-Limit", "300"},
    {"X-RateLimit-Remaining", "299"},
    {"X-RateLimit-Reset", "2022-12-09T22:00:00.014518Z"},
    {"Cache-Control", "no-store"},
    {"Link",
     "<https://maakr.social/api/v1/accounts/109326385811340972/statuses?max_id=109366861677340845>; rel=\"next\", <https://maakr.social/api/v1/accounts/109326385811340972/statuses?min_id=109485828589139596>; rel=\"prev\""},
    {"ETag", "W/\"a574b5a9f0c6161b4f3f991d0eaa9a42\""},
    {"Content-Security-Policy",
     "base-uri 'none'; default-src 'none'; frame-ancestors 'none'; font-src 'self' https://maakr.social; img-src 'self' https: data: blob: https://maakr.social; style-src 'self' https://maakr.social 'nonce-c+zjJVuxiHDaNENIxxiSiA=='; media-src 'self' https: data: https://maakr.social; frame-src 'self' https:; manifest-src 'self' https://maakr.social; connect-src 'self' data: blob: https://maakr.social https://s3-eu-central-1.amazonaws.com wss://maakr.social; script-src 'self' https://maakr.social 'wasm-unsafe-eval'; child-src 'self' blob: https://maakr.social; worker-src 'self' blob: https://maakr.social"},
    {"X-Request-Id", "2b8b6ef7-1e3f-4bc2-abd5-a43ebc834bff"},
    {"X-Runtime", "0.162951"},
    {"Strict-Transport-Security", "max-age=63072000; includeSubDomains"},
    {"Vary", "Origin"},
    {"X-Cached", "MISS"},
    {"Strict-Transport-Security", "max-age=31536000"}
  ],
  request_url: "https://maakr.social/api/v1/accounts/109326385811340972/statuses",
  request: %HTTPoison.Request{
    method: :get,
    url: "https://maakr.social/api/v1/accounts/109326385811340972/statuses",
    headers: [],
    body: "",
    params: %{},
    options: []
  }
}
```

## Formatting

```elixir
contents =
  body
  |> Jason.decode!()
  |> Enum.map(fn %{"content" => content} -> content end)
  |> Enum.reject(fn str -> str == "" end)
  |> Enum.map(fn body ->
    Floki.parse_document!(body) |> Floki.text()
  end)
  |> Enum.map(&String.replace(&1, "\n", " "))
```

<!-- livebook:{"output":true} -->

```
["By the way: the fact that Mastodon is an open platform makes this even easier. Status updates are just an API call away, no authentication required!",
 "After @josevalim's impressive demo of Elixir Bumblebee I gave the neural networks a try in Livebook. It's pretty amazing how easy it is to get started.This is a sentiment analysis of José Valim's most recent status updates. Yes, he's a pretty positive guy!For anyone interested, here's the Livebook: https://github.com/vnglst/livebook-sentiment-analysis",
 "@josevalim congratulations on the launch Jose, this looks fantastic.",
 "I asked ChatGPT to write a guest post on my blog on it's impact on the way developers work.Conclusion: don't retreat to the mountains just yet. There's still work to be done. 😀https://koenvangilst.nl/blog/guest-post-gpt-3-chat",
 "Turns out I'm not the only one who thought Day 4 of Advent of Code was easier than Day 3.Great visualisation of the AOC user results here: https://www.maurits.vdschee.nl/scatterplot/?",
 "Having a lot of fun with Advent of Code with Elixir this year. I found yesterday's challenge a bit hard (I always struggle with converting strings to char lists), but today was good.Just completed \"Camp Cleanup\" - Day 4 - Advent of Code 2022 #AdventOfCodehttps://adventofcode.com/2022/day/4",
 "Adding the suggestion to \"make sure it rhymes in Dutch and to pretend you're Sinterklaas\" did not make it any better.In Dutch ChatGPT is now pretending to be Sinterklaas, but it's also saying that it loves my wife.  😂",
 "Using ChatGPT to write some last minute Sinterklaas poems. So far this is not the success I was hoping for.",
 "@josevalim welcome here Jose! Will you be livestreaming advent of code again this year? I really enjoyed that last year.",
 "This summer I read Regenesis by George Monbiot and I recently came across my reading notes again. In the book he tries to answer the question how we can feed the world without also devouring our planet. It shattered quite a few beliefs I had about \"good\" food.https://koenvangilst.nl/blog/regenesis-reading-notes",
 "@petar that's an ambitious dream!  That book looks really interesting.",
 "@petar What are you going to make with Zig? Is there some feature or application where Zig really shines?",
 "I created a tutorial for Elixir Livebook! Using data from Wikidata I'm plotting the average age Dutch parliament over time.I really enjoyed Livebook's usability and the fact that, in the end, it's all just markdown. The plotting library VegaLite is also pretty powerful. Looking forward to creating more data visualisations with it.Let me know what you think of the tutorial!https://koenvangilst.nl/blog/livebook-average-age-of-parliament",
 "Lunch break run. Cold, but nice.",
 "I've been generating logo ideas for our Maakr Mastodon instance. I completely forgot how much of a time suck stable diffusion is. 😅",
 "@petar hi Petar! Ik ben nog op zoek naar een nieuw thuis op Mastodon voor deze Twitterbot van mij. Zou hij er hier bij kunnen? Hij wel vrij chatty. https://mobile.twitter.com/overheidedits",
 "I just had my first toot go viral! 🐘🎉https://maakr.social/@koen/109366861677340845",
 "Thanks to @rich_harris I just found out about http://fedifinder.glitch.me/ which makes importing my Twitter followers to Mastodon so much easier. This scans all the profiles of your followers for Mastodon accounts and you can import that list."]
```

## Loading model

```elixir
{:ok, model_info} =
  Bumblebee.load_model({:hf, "finiteautomata/bertweet-base-sentiment-analysis"},
    log_params_diff: false
  )

{:ok, tokenizer} = Bumblebee.load_tokenizer({:hf, "vinai/bertweet-base"})

serving =
  Bumblebee.Text.text_classification(model_info, tokenizer,
    compile: [batch_size: 1, sequence_length: 100],
    defn_options: [compiler: EXLA]
  )
```

<!-- livebook:{"output":true} -->

```

21:46:17.309 [info] TfrtCpuClient created.

```

<!-- livebook:{"output":true} -->

```
%Nx.Serving{
  module: Nx.Serving.Default,
  arg: #Function<1.49867295/0 in Bumblebee.Text.TextClassification.text_classification/3>,
  client_preprocessing: #Function<2.49867295/1 in Bumblebee.Text.TextClassification.text_classification/3>,
  client_postprocessing: #Function<3.49867295/3 in Bumblebee.Text.TextClassification.text_classification/3>,
  process_options: [batch_size: 1]
}
```

## Sentiment analysis

```elixir
outputs =
  contents
  |> Enum.map(fn str -> {str, Nx.Serving.run(serving, str)} end)
  |> Enum.map(fn {str, output} ->
    highest = output.predictions |> Enum.at(0)
    %{str: str, label: highest.label, score: highest.score}
  end)
```

<!-- livebook:{"output":true} -->

```
[
  %{
    label: "POS",
    score: 0.7338218092918396,
    str: "By the way: the fact that Mastodon is an open platform makes this even easier. Status updates are just an API call away, no authentication required!"
  },
  %{
    label: "POS",
    score: 0.9880837798118591,
    str: "After @josevalim's impressive demo of Elixir Bumblebee I gave the neural networks a try in Livebook. It's pretty amazing how easy it is to get started.This is a sentiment analysis of José Valim's most recent status updates. Yes, he's a pretty positive guy!For anyone interested, here's the Livebook: https://github.com/vnglst/livebook-sentiment-analysis"
  },
  %{
    label: "POS",
    score: 0.9894054532051086,
    str: "@josevalim congratulations on the launch Jose, this looks fantastic."
  },
  %{
    label: "NEU",
    score: 0.8556995987892151,
    str: "I asked ChatGPT to write a guest post on my blog on it's impact on the way developers work.Conclusion: don't retreat to the mountains just yet. There's still work to be done. 😀https://koenvangilst.nl/blog/guest-post-gpt-3-chat"
  },
  %{
    label: "POS",
    score: 0.9605803489685059,
    str: "Turns out I'm not the only one who thought Day 4 of Advent of Code was easier than Day 3.Great visualisation of the AOC user results here: https://www.maurits.vdschee.nl/scatterplot/?"
  },
  %{
    label: "POS",
    score: 0.9873007535934448,
    str: "Having a lot of fun with Advent of Code with Elixir this year. I found yesterday's challenge a bit hard (I always struggle with converting strings to char lists), but today was good.Just completed \"Camp Cleanup\" - Day 4 - Advent of Code 2022 #AdventOfCodehttps://adventofcode.com/2022/day/4"
  },
  %{
    label: "NEU",
    score: 0.7829912900924683,
    str: "Adding the suggestion to \"make sure it rhymes in Dutch and to pretend you're Sinterklaas\" did not make it any better.In Dutch ChatGPT is now pretending to be Sinterklaas, but it's also saying that it loves my wife.  😂"
  },
  %{
    label: "NEG",
    score: 0.9214252233505249,
    str: "Using ChatGPT to write some last minute Sinterklaas poems. So far this is not the success I was hoping for."
  },
  %{
    label: "POS",
    score: 0.9884862899780273,
    str: "@josevalim welcome here Jose! Will you be livestreaming advent of code again this year? I really enjoyed that last year."
  },
  %{
    label: "NEU",
    score: 0.8032457828521729,
    str: "This summer I read Regenesis by George Monbiot and I recently came across my reading notes again. In the book he tries to answer the question how we can feed the world without also devouring our planet. It shattered quite a few beliefs I had about \"good\" food.https://koenvangilst.nl/blog/regenesis-reading-notes"
  },
  %{
    label: "POS",
    score: 0.9907512664794922,
    str: "@petar that's an ambitious dream!  That book looks really interesting."
  },
  %{
    label: "NEU",
    score: 0.9308815002441406,
    str: "@petar What are you going to make with Zig? Is there some feature or application where Zig really shines?"
  },
  %{
    label: "POS",
    score: 0.9700663685798645,
    str: "I created a tutorial for Elixir Livebook! Using data from Wikidata I'm plotting the average age Dutch parliament over time.I really enjoyed Livebook's usability and the fact that, in the end, it's all just markdown. The plotting library VegaLite is also pretty powerful. Looking forward to creating more data visualisations with it.Let me know what you think of the tutorial!https://koenvangilst.nl/blog/livebook-average-age-of-parliament"
  },
  %{label: "POS", score: 0.5888510942459106, str: "Lunch break run. Cold, but nice."},
  %{
    label: "NEG",
    score: 0.5433042645454407,
    str: "I've been generating logo ideas for our Maakr Mastodon instance. I completely forgot how much of a time suck stable diffusion is. 😅"
  },
  %{
    label: "NEU",
    score: 0.8439545631408691,
    str: "@petar hi Petar! Ik ben nog op zoek naar een nieuw thuis op Mastodon voor deze Twitterbot van mij. Zou hij er hier bij kunnen? Hij wel vrij chatty. https://mobile.twitter.com/overheidedits"
  },
  %{
    label: "NEU",
    score: 0.6850554347038269,
    str: "I just had my first toot go viral! 🐘🎉https://maakr.social/@koen/109366861677340845"
  },
  %{
    label: "POS",
    score: 0.7191212773323059,
    str: "Thanks to @rich_harris I just found out about http://fedifinder.glitch.me/ which makes importing my Twitter followers to Mastodon so much easier. This scans all the profiles of your followers for Mastodon accounts and you can import that list."
  }
]
```

```elixir
Vl.new(width: 700, height: 400, title: "Sentiment analysis")
|> Vl.data_from_values(outputs, only: ["label", "score"])
|> Vl.mark(:arc)
|> Vl.encode_field(:color, "label",
  title: "Sentiment",
  type: :nominal,
  scale: [scheme: "category10"]
)
|> Vl.encode_field(:theta, "score", type: :quantitative)
```

<!-- livebook:{"output":true} -->

```vega-lite
{"$schema":"https://vega.github.io/schema/vega-lite/v5.json","data":{"values":[{"label":"POS","score":0.7338218092918396},{"label":"POS","score":0.9880837798118591},{"label":"POS","score":0.9894054532051086},{"label":"NEU","score":0.8556995987892151},{"label":"POS","score":0.9605803489685059},{"label":"POS","score":0.9873007535934448},{"label":"NEU","score":0.7829912900924683},{"label":"NEG","score":0.9214252233505249},{"label":"POS","score":0.9884862899780273},{"label":"NEU","score":0.8032457828521729},{"label":"POS","score":0.9907512664794922},{"label":"NEU","score":0.9308815002441406},{"label":"POS","score":0.9700663685798645},{"label":"POS","score":0.5888510942459106},{"label":"NEG","score":0.5433042645454407},{"label":"NEU","score":0.8439545631408691},{"label":"NEU","score":0.6850554347038269},{"label":"POS","score":0.7191212773323059}]},"encoding":{"color":{"field":"label","scale":{"scheme":"category10"},"title":"Sentiment","type":"nominal"},"theta":{"field":"score","type":"quantitative"}},"height":400,"mark":"arc","title":"Sentiment analysis","width":700}
```

```elixir
{:ok, model_info} =
  Bumblebee.load_model({:hf, "j-hartmann/emotion-english-distilroberta-base"},
    log_params_diff: false
  )

{:ok, tokenizer} =
  Bumblebee.load_tokenizer({:hf, "j-hartmann/emotion-english-distilroberta-base"})

serving =
  Bumblebee.Text.text_classification(model_info, tokenizer,
    compile: [batch_size: 1, sequence_length: 100],
    defn_options: [compiler: EXLA]
  )
```

<!-- livebook:{"output":true} -->

```
%Nx.Serving{
  module: Nx.Serving.Default,
  arg: #Function<1.49867295/0 in Bumblebee.Text.TextClassification.text_classification/3>,
  client_preprocessing: #Function<2.49867295/1 in Bumblebee.Text.TextClassification.text_classification/3>,
  client_postprocessing: #Function<3.49867295/3 in Bumblebee.Text.TextClassification.text_classification/3>,
  process_options: [batch_size: 1]
}
```

```elixir
outputs_emotions =
  contents
  |> Enum.map(fn str -> {str, Nx.Serving.run(serving, str)} end)
  |> Enum.map(fn {str, output} ->
    highest = output.predictions |> Enum.at(0)
    %{str: str, label: highest.label, score: highest.score}
  end)
```

<!-- livebook:{"output":true} -->

```
[
  %{
    label: "neutral",
    score: 0.8211598992347717,
    str: "By the way: the fact that Mastodon is an open platform makes this even easier. Status updates are just an API call away, no authentication required!"
  },
  %{
    label: "surprise",
    score: 0.5304481983184814,
    str: "After @josevalim's impressive demo of Elixir Bumblebee I gave the neural networks a try in Livebook. It's pretty amazing how easy it is to get started.This is a sentiment analysis of José Valim's most recent status updates. Yes, he's a pretty positive guy!For anyone interested, here's the Livebook: https://github.com/vnglst/livebook-sentiment-analysis"
  },
  %{
    label: "joy",
    score: 0.9169750809669495,
    str: "@josevalim congratulations on the launch Jose, this looks fantastic."
  },
  %{
    label: "neutral",
    score: 0.7334541082382202,
    str: "I asked ChatGPT to write a guest post on my blog on it's impact on the way developers work.Conclusion: don't retreat to the mountains just yet. There's still work to be done. 😀https://koenvangilst.nl/blog/guest-post-gpt-3-chat"
  },
  %{
    label: "neutral",
    score: 0.5192348957061768,
    str: "Turns out I'm not the only one who thought Day 4 of Advent of Code was easier than Day 3.Great visualisation of the AOC user results here: https://www.maurits.vdschee.nl/scatterplot/?"
  },
  %{
    label: "joy",
    score: 0.9463387727737427,
    str: "Having a lot of fun with Advent of Code with Elixir this year. I found yesterday's challenge a bit hard (I always struggle with converting strings to char lists), but today was good.Just completed \"Camp Cleanup\" - Day 4 - Advent of Code 2022 #AdventOfCodehttps://adventofcode.com/2022/day/4"
  },
  %{
    label: "neutral",
    score: 0.8564493656158447,
    str: "Adding the suggestion to \"make sure it rhymes in Dutch and to pretend you're Sinterklaas\" did not make it any better.In Dutch ChatGPT is now pretending to be Sinterklaas, but it's also saying that it loves my wife.  😂"
  },
  %{
    label: "neutral",
    score: 0.8701579570770264,
    str: "Using ChatGPT to write some last minute Sinterklaas poems. So far this is not the success I was hoping for."
  },
  %{
    label: "joy",
    score: 0.8999590873718262,
    str: "@josevalim welcome here Jose! Will you be livestreaming advent of code again this year? I really enjoyed that last year."
  },
  %{
    label: "surprise",
    score: 0.41822049021720886,
    str: "This summer I read Regenesis by George Monbiot and I recently came across my reading notes again. In the book he tries to answer the question how we can feed the world without also devouring our planet. It shattered quite a few beliefs I had about \"good\" food.https://koenvangilst.nl/blog/regenesis-reading-notes"
  },
  %{
    label: "joy",
    score: 0.47406893968582153,
    str: "@petar that's an ambitious dream!  That book looks really interesting."
  },
  %{
    label: "surprise",
    score: 0.7055702805519104,
    str: "@petar What are you going to make with Zig? Is there some feature or application where Zig really shines?"
  },
  %{
    label: "joy",
    score: 0.898139238357544,
    str: "I created a tutorial for Elixir Livebook! Using data from Wikidata I'm plotting the average age Dutch parliament over time.I really enjoyed Livebook's usability and the fact that, in the end, it's all just markdown. The plotting library VegaLite is also pretty powerful. Looking forward to creating more data visualisations with it.Let me know what you think of the tutorial!https://koenvangilst.nl/blog/livebook-average-age-of-parliament"
  },
  %{label: "neutral", score: 0.6475915908813477, str: "Lunch break run. Cold, but nice."},
  %{
    label: "disgust",
    score: 0.3946681618690491,
    str: "I've been generating logo ideas for our Maakr Mastodon instance. I completely forgot how much of a time suck stable diffusion is. 😅"
  },
  %{
    label: "neutral",
    score: 0.6316707730293274,
    str: "@petar hi Petar! Ik ben nog op zoek naar een nieuw thuis op Mastodon voor deze Twitterbot van mij. Zou hij er hier bij kunnen? Hij wel vrij chatty. https://mobile.twitter.com/overheidedits"
  },
  %{
    label: "neutral",
    score: 0.5115512013435364,
    str: "I just had my first toot go viral! 🐘🎉https://maakr.social/@koen/109366861677340845"
  },
  %{
    label: "neutral",
    score: 0.769150972366333,
    str: "Thanks to @rich_harris I just found out about http://fedifinder.glitch.me/ which makes importing my Twitter followers to Mastodon so much easier. This scans all the profiles of your followers for Mastodon accounts and you can import that list."
  }
]
```

```elixir
Vl.new(width: 700, height: 400, title: "Sentiment analysis")
|> Vl.data_from_values(outputs_emotions, only: ["label", "score"])
|> Vl.mark(:arc)
|> Vl.encode_field(:color, "label",
  title: "Sentiment",
  type: :nominal,
  scale: [scheme: "category10"]
)
|> Vl.encode_field(:theta, "score", type: :quantitative)
```

<!-- livebook:{"output":true} -->

```vega-lite
{"$schema":"https://vega.github.io/schema/vega-lite/v5.json","data":{"values":[{"label":"neutral","score":0.8211598992347717},{"label":"surprise","score":0.5304481983184814},{"label":"joy","score":0.9169750809669495},{"label":"neutral","score":0.7334541082382202},{"label":"neutral","score":0.5192348957061768},{"label":"joy","score":0.9463387727737427},{"label":"neutral","score":0.8564493656158447},{"label":"neutral","score":0.8701579570770264},{"label":"joy","score":0.8999590873718262},{"label":"surprise","score":0.41822049021720886},{"label":"joy","score":0.47406893968582153},{"label":"surprise","score":0.7055702805519104},{"label":"joy","score":0.898139238357544},{"label":"neutral","score":0.6475915908813477},{"label":"disgust","score":0.3946681618690491},{"label":"neutral","score":0.6316707730293274},{"label":"neutral","score":0.5115512013435364},{"label":"neutral","score":0.769150972366333}]},"encoding":{"color":{"field":"label","scale":{"scheme":"category10"},"title":"Sentiment","type":"nominal"},"theta":{"field":"score","type":"quantitative"}},"height":400,"mark":"arc","title":"Sentiment analysis","width":700}
```
